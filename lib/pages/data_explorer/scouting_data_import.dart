import 'dart:async';
import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:image_picker/image_picker.dart';
import 'package:provider/provider.dart';
import 'package:robotz_garage_scouting/models/database_controller_model.dart';
import 'package:robotz_garage_scouting/router.dart';

class ScoutingDataImportPage extends StatefulWidget {
  final GarageRouter scoutingRouter;

  const ScoutingDataImportPage({super.key, required this.scoutingRouter});

  @override
  State<ScoutingDataImportPage> createState() => _ScoutingDataImportPageState();
}

class _ScoutingDataImportPageState extends State<ScoutingDataImportPage> {
  late final IsarModel _isarModel;

  List<XFile> _paths = [];

  @override
  void initState() {
    super.initState();

    _isarModel = context.read<IsarModel>();
  }

  void _cancel() {
    context.pop();
  }

  Future<void> _pickFiles() async {
    FilePickerResult? result = await FilePicker.platform.pickFiles();

    if (result != null) {
      setState(() {
        // _paths = result.files;
        // _paths = result.paths.map((path) => path!).toList();
      });
    }
  }

  Future<void> _readFromFiles() async {
    showGeneralDialog(
      context: context,
      pageBuilder: (BuildContext context, Animation<double> animation,
              Animation<double> secondaryAnimation) =>
          Dialog(
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(8.0),
        ),
        elevation: 16.0,
        insetPadding: const EdgeInsets.all(0.0),
        child: LayoutBuilder(
          builder: (context, constraints) {
            const double padY = 16;
            const double padX = padY / 2;

            return Padding(
              padding: const EdgeInsets.fromLTRB(padX, padY, padX, padY),
              child: Column(children: [
                const Text(
                  "Select Files to Import",
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 18.0,
                  ),
                ),
                ElevatedButton(
                    onPressed: () => context.pop(), child: const Text("Done"))
              ]),
            );
          },
        ),
      ),
    );
  }

  void _readFromQRCode() {}

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          "Import Data",
          textAlign: TextAlign.center,
        ),
      ),
      body: Column(
          children: [
        ListTile(
          leading: const Icon(Icons.qr_code),
          title: const Text("Scan QR Code"),
          subtitle: const Text(
              "Use the Export tool on another device to generate a QR Code, and read with a QR Scanner."),
          onTap: () => _readFromQRCode(),
        ),
        ListTile(
          leading: const Icon(Icons.file_download),
          title: const Text("Import data from CSV"),
          subtitle: const Text(
              "Select CSVs that have been generated by other users."),
          onTap: () => _readFromFiles(),
        )
      ].toList()),
      // bottomNavigationBar: Container(
      //   decoration: BoxDecoration(
      //       border:
      //           Border(top: BorderSide(color: Theme.of(context).dividerColor))),
      //   padding: const EdgeInsets.all(16),
      //   child: Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [
      //     OutlinedButton(onPressed: _cancel, child: const Text("Cancel")),
      //     ElevatedButton(
      //       onPressed: _deleteDrafts,
      //       child: const Text("Delete"),
      //     ),
      //   ]),
      // ),
    );
  }
}
